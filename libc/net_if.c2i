module net_if;

import c2 local;
import sys_socket;

type CAddr char* @(cname="__caddr_t");

type Flag enum u32 {
    IFF_UP = 0x1,
    IFF_BROADCAST = 0x2,
    IFF_DEBUG = 0x4,
    IFF_LOOPBACK = 0x8,
    /* some entries skipped */
    IFF_RUNNING = 0x40,
    IFF_NOARP = 0x80,
    IFF_PROMISC = 0x100,
    /* some entries skipped */
} @(cname="ifflag")

type Addr struct {
    sys_socket.Sockaddr ifa_addr;
    union ifa_ifu {
        sys_socket.Sockaddr ifu_broadaddr;
        sys_socket.Sockaddr ifu_dstaddr;
    }
    void* ifa_ifp; // TODO struct iface* ifa_ifp;
    Addr* ifa_next;
} @(cname="ifaddr")

type Map struct {
    c_ulong mem_start;
    c_ulong mem_end;
    c_ushort base_addr;
    c_uchar irq;
    c_uchar dma;
    c_uchar port;
    // 3 bytes spare
} @(cname="ifmap")

const u32 IFNAMSIZ = 16;

type Req struct {
    union ifr_ifrn {
        char[IFNAMSIZ] ifrn_name;
    }
    union ifr_ifru {
        sys_socket.Sockaddr ifru_addr;
        sys_socket.Sockaddr ifru_dstaddr;
        sys_socket.Sockaddr ifru_broadaddr;
        sys_socket.Sockaddr ifru_netmask;
        sys_socket.Sockaddr ifru_hwaddr;
        c_short ifru_flags;
        c_int ifru_ivalue;
        c_int ifru_mtu;
        Map ifru_map;
        char[IFNAMSIZ] ifru_slave;
        char[IFNAMSIZ] ifru_newname;
        CAddr ifru_data;
    }
} @(cname="ifreq")

type Conf struct {
    c_int ifc_len;
    union ifc_ifcu {
        CAddr ifcu_buf;
        Req* ifcu_req;
    }
} @(cname="ifconf")

