module ctermios;

import c2 local;

type Flag c_uint;
type Speed c_uint;
type CC c_uchar;

const u32 NCCS = 32;

type Termios struct {
    Flag c_iflag;       /* input mode flags */
    Flag c_oflag;       /* output mode flags */
    Flag c_cflag;       /* control mode flags */
    Flag c_lflag;       /* local mode flags */
    CC c_line;            /* line discipline */
    CC[NCCS] c_cc;        /* control characters */
    Speed c_ispeed;       /* input speed */
    Speed c_ospeed;       /* output speed */
} @(cname="termios")

/* c_cc characters */
const c_uint VINTR = 0;
const c_uint VQUIT = 1;
const c_uint VERASE = 2;
const c_uint VKILL = 3;
const c_uint VEOF = 4;
const c_uint VTIME = 5;
const c_uint VMIN = 6;
const c_uint VSWTC = 7;
const c_uint VSTART = 8;
const c_uint VSTOP = 9;
const c_uint VSUSP = 10;
const c_uint VEOL = 11;
const c_uint VREPRINT = 12;
const c_uint VDISCARD = 13;
const c_uint VWERASE = 14;
const c_uint VLNEXT = 15;
const c_uint VEOL2 = 16;

/* c_iflag bits */
const c_uint IGNBRK  = 0000001;
const c_uint BRKINT  = 0000002;
const c_uint IGNPAR  = 0000004;
const c_uint PARMRK  = 0000010;
const c_uint INPCK   = 0000020;
const c_uint ISTRIP  = 0000040;
const c_uint INLCR   = 0000100;
const c_uint IGNCR   = 0000200;
const c_uint ICRNL   = 0000400;
const c_uint IUCLC   = 0001000;
const c_uint IXON    = 0002000;
const c_uint IXANY   = 0004000;
const c_uint IXOFF   = 0010000;
const c_uint IMAXBEL = 0020000;
const c_uint IUTF8   = 0040000;

/* c_oflag bits */
const c_uint OPOST   = 0000001;
const c_uint OLCUC   = 0000002;
const c_uint ONLCR   = 0000004;
const c_uint OCRNL   = 0000010;
const c_uint ONOCR   = 0000020;
const c_uint ONLRET  = 0000040;
const c_uint OFILL   = 0000100;
const c_uint OFDEL   = 0000200;
const c_uint NLDLY   = 0000400;
const c_uint NL0   = 0000000;
const c_uint NL1   = 0000400;
const c_uint CRDLY   = 0003000;
const c_uint CR0   = 0000000;
const c_uint CR1   = 0001000;
const c_uint CR2   = 0002000;
const c_uint CR3   = 0003000;
const c_uint TABDLY  = 0014000;
const c_uint TAB0  = 0000000;
const c_uint TAB1  = 0004000;
const c_uint TAB2  = 0010000;
const c_uint TAB3  = 0014000;
const c_uint XTABS = 0014000;
const c_uint BSDLY   = 0020000;
const c_uint BS0   = 0000000;
const c_uint BS1   = 0020000;
const c_uint VTDLY   = 0040000;
const c_uint VT0   = 0000000;
const c_uint VT1   = 0040000;
const c_uint FFDLY   = 0100000;
const c_uint FF0   = 0000000;
const c_uint FF1   = 0100000;

/* c_cflag bit meaning */
const c_uint CBAUD   = 0010017;
const c_uint B0 = 0000000;     /* hang up */
const c_uint B50    = 0000001;
const c_uint B75    = 0000002;
const c_uint B110   = 0000003;
const c_uint B134   = 0000004;
const c_uint B150   = 0000005;
const c_uint B200   = 0000006;
const c_uint B300   = 0000007;
const c_uint B600   = 0000010;
const c_uint B1200  = 0000011;
const c_uint B1800  = 0000012;
const c_uint B2400  = 0000013;
const c_uint B4800  = 0000014;
const c_uint B9600  = 0000015;
const c_uint B19200 = 0000016;
const c_uint B38400 = 0000017;
const c_uint EXTA = B19200;
const c_uint EXTB = B38400;
const c_uint CSIZE   = 0000060;
const c_uint CS5   = 0000000;
const c_uint CS6   = 0000020;
const c_uint CS7   = 0000040;
const c_uint CS8   = 0000060;
const c_uint CSTOPB  = 0000100;
const c_uint CREAD   = 0000200;
const c_uint PARENB  = 0000400;
const c_uint PARODD  = 0001000;
const c_uint HUPCL   = 0002000;
const c_uint CLOCAL  = 0004000;
const c_uint CBAUDEX = 0010000;
const c_uint BOTHER = 0010000;
const c_uint B57600 = 0010001;
const c_uint B115200 = 0010002;
const c_uint B230400 = 0010003;
const c_uint B460800 = 0010004;
const c_uint B500000 = 0010005;
const c_uint B576000 = 0010006;
const c_uint B921600 = 0010007;
const c_uint B1000000 = 0010010;
const c_uint B1152000 = 0010011;
const c_uint B1500000 = 0010012;
const c_uint B2000000 = 0010013;
const c_uint B2500000 = 0010014;
const c_uint B3000000 = 0010015;
const c_uint B3500000 = 0010016;
const c_uint B4000000 = 0010017;
const c_uint CIBAUD    = 002003600000;  /* input baud rate */
const c_uint CMSPAR    = 010000000000;  /* mark or space (stick) parity */
const c_uint CRTSCTS   = 020000000000;  /* flow control */


/* c_lflag bits */
const c_uint ISIG    = 0000001;
const c_uint ICANON  = 0000002;
const c_uint XCASE   = 0000004;
const c_uint ECHO    = 0000010;
const c_uint ECHOE   = 0000020;
const c_uint ECHOK   = 0000040;
const c_uint ECHONL  = 0000100;
const c_uint NOFLSH  = 0000200;
const c_uint TOSTOP  = 0000400;
const c_uint ECHOCTL = 0001000;
const c_uint ECHOPRT = 0002000;
const c_uint ECHOKE  = 0004000;
const c_uint FLUSHO  = 0010000;
const c_uint PENDIN  = 0040000;
const c_uint IEXTEN  = 0100000;
const c_uint EXTPROC = 0200000;


func c_int tcgetattr(c_int fd, Termios* termios_p);
func c_int tcsetattr(c_int fd, c_int optional_actions, const Termios* termios_p);

